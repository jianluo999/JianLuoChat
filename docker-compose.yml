version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: jianluochat-postgres
    environment:
      POSTGRES_DB: jianluochat
      POSTGRES_USER: jianluochat
      POSTGRES_PASSWORD: jianluochat123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/src/main/resources/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - jianluochat-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: jianluochat-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - jianluochat-network

  # Spring Boot Backend (uncomment when ready)
  # backend:
  #   build:
  #     context: ./backend
  #     dockerfile: Dockerfile
  #   container_name: jianluochat-backend
  #   ports:
  #     - "8080:8080"
  #   environment:
  #     - SPRING_PROFILES_ACTIVE=docker
  #     - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/jianluochat
  #     - SPRING_DATASOURCE_USERNAME=jianluochat
  #     - SPRING_DATASOURCE_PASSWORD=jianluochat123
  #     - SPRING_DATA_REDIS_HOST=redis
  #   depends_on:
  #     - postgres
  #     - redis
  #   networks:
  #     - jianluochat-network

  # Vue.js Frontend (uncomment when ready)
  # frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   container_name: jianluochat-frontend
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     - backend
  #   networks:
  #     - jianluochat-network

volumes:
  postgres_data:
  redis_data:

networks:
  jianluochat-network:
    driver: bridge
