const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/browser-index-CPs8hK5u.js","assets/index-Cl5nGqgc.js","assets/index-Dfi89B19.css"])))=>i.map(i=>d[i]);
import{T as P,g as k,h as L,C as J,j as K,y as F,c as a,a as t,b,n as j,B as r,t as g,F as H,r as W,w as q,v as G,d as Y,e as E,o as c,_ as Q}from"./index-Cl5nGqgc.js";const X=P("matrix-simple",()=>{const m=k(null),v=k(!1),u=k(null),y=k([]),h=k(null),C=L(()=>!!m.value),I=L(()=>y.value.find(e=>e.roomId===h.value)),w=async()=>{if(m.value)try{m.value.stopClient(),m.value=null}catch(e){console.warn("清理客户端时出错:",e)}u.value=null,y.value=[],h.value=null},M=async(e,o,s)=>{if(v.value)return console.log("⚠️ 客户端正在初始化中"),!1;try{v.value=!0,u.value=null,console.log(`🚀 创建Matrix客户端: ${e} @ ${s}`),await w();const{createClient:d,MemoryStore:_,IndexedDBStore:U}=await J(async()=>{const{createClient:n,MemoryStore:x,IndexedDBStore:N}=await import("./browser-index-CPs8hK5u.js").then(V=>V.N);return{createClient:n,MemoryStore:x,IndexedDBStore:N}},__vite__mapDeps([0,1,2])),z=`jianluochat-device-${e.split(":")[0].substring(1)}`;let R=localStorage.getItem(z);if(!R){const n=Date.now(),x=Math.random().toString(36).substring(2,10);R=`JIANLUOCHAT_${n}_${x}`,localStorage.setItem(z,R),console.log("🆔 生成设备ID:",R)}const $={useAuthorizationHeader:!0};try{window.indexedDB&&localStorage?($.store=new U({indexedDB:window.indexedDB,dbName:`jianluochat-${e.split(":")[0].substring(1)}`,localStorage}),console.log("📦 使用IndexedDB存储")):($.store=new _({localStorage}),console.log("📦 使用Memory存储"))}catch(n){console.warn("存储设置失败，使用默认:",n),$.store=new _({localStorage})}const f=d({baseUrl:`https://${s}`,accessToken:o,userId:e,deviceId:R,timelineSupport:!0,...$});console.log("📦 初始化存储...");try{await f.store.startup(),console.log("✅ 存储初始化成功")}catch(n){console.warn("存储初始化失败，使用内存存储:",n.message),f.store=new _({localStorage}),await f.store.startup()}return f.on("sync",(n,x,N)=>{console.log(`🔄 同步状态: ${x} -> ${n}`),n==="PREPARED"||n==="SYNCING"?(console.log("✅ 同步就绪，加载房间..."),setTimeout(()=>S(),1e3)):n==="ERROR"&&(console.error("❌ 同步错误:",N),u.value="同步失败，请检查网络连接")}),f.on("Room.timeline",(n,x)=>{n.getType()==="m.room.message"&&(console.log("💬 新消息:",n.getContent().body),S())}),f.on("error",n=>{console.error("❌ 客户端错误:",n),n.message&&(n.value=`客户端错误: ${n.message}`)}),m.value=f,console.log("✅ Matrix客户端创建成功"),console.log("🚀 启动客户端..."),await f.startClient({initialSyncLimit:10,lazyLoadMembers:!0}),console.log("✅ 客户端启动成功"),!0}catch(d){return console.error("❌ 创建客户端失败:",d),d.value=`创建客户端失败: ${d.message}`,!1}finally{v.value=!1}},S=()=>{if(!m.value){console.warn("⚠️ 客户端未初始化，无法加载房间");return}try{const e=m.value.getRooms();if(console.log(`📊 获取到 ${e.length} 个房间`),e.length===0){console.log("📭 暂无房间数据"),y.value=[];return}y.value=e.map(o=>{try{return{roomId:o.roomId,name:o.name||o.roomId||"未命名房间",topic:D(o),memberCount:B(o),unreadCount:A(o),lastMessage:T(o)}}catch(s){return console.warn("⚠️ 处理房间数据失败:",o.roomId,s),{roomId:o.roomId,name:o.roomId||"未命名房间",topic:"",memberCount:0,unreadCount:0,lastMessage:null}}}).filter(o=>o!==null),console.log(`✅ 房间列表更新完成，共 ${y.value.length} 个房间`)}catch(e){console.error("❌ 加载房间失败:",e),e.value=`加载房间失败: ${e}`}},D=e=>{try{return e.currentState?.getStateEvents("m.room.topic","")?.getContent()?.topic||""}catch{return""}},B=e=>{try{return e.getJoinedMemberCount()||0}catch{return 0}},A=e=>{try{return e.getUnreadNotificationCount()||0}catch{return 0}},T=e=>{try{const s=e.getLiveTimeline().getEvents();for(let d=s.length-1;d>=0;d--){const _=s[d];if(_.getType()==="m.room.message")return{body:_.getContent().body||"",sender:_.getSender(),timestamp:_.getTs()}}return null}catch(o){return console.warn("获取最后消息失败:",o),null}};return{matrixClient:m,isInitializing:v,error:u,rooms:y,currentRoomId:h,isConnected:C,currentRoom:I,createClient:M,cleanup:w,loadRooms:S,sendMessage:async(e,o)=>{if(!m.value)throw new Error("客户端未初始化");try{const s={body:o,msgtype:"m.text"};await m.value.sendEvent(e,"m.room.message",s),console.log("✅ 消息发送成功")}catch(s){throw console.error("❌ 发送消息失败:",s),s}},selectRoom:e=>{h.value=e,console.log("📍 选择房间:",e)},retryInitialization:async()=>{console.log("🔄 开始重试初始化...");const e=localStorage.getItem("matrix-login-info"),o=localStorage.getItem("matrix_access_token");if(console.log("📋 存储状态检查:",{hasLoginInfo:!!e,hasAccessToken:!!o}),o&&!e)return console.warn("⚠️ 检测到存储状态不一致，建议清理后重新登录"),u.value="存储状态不一致，请清理后重新登录",!1;if(!e)return u.value="没有找到登录信息，请重新登录",!1;try{const s=JSON.parse(e);return console.log("📋 尝试使用登录信息:",{userId:s.userId,homeserver:s.homeserver,hasAccessToken:!!s.accessToken}),await M(s.userId,s.accessToken,s.homeserver)}catch(s){return console.error("重试初始化失败:",s),s.value=`重试失败: ${s.message}`,!1}},clearAllStorage:()=>{console.log("🧹 清理所有Matrix相关存储数据...");const e=[];for(let o=0;o<localStorage.length;o++){const s=localStorage.key(o);s&&(s.includes("matrix")||s.includes("jianluochat")||s.includes("Matrix")||s.startsWith("mx_"))&&e.push(s)}if(e.forEach(o=>{localStorage.removeItem(o),console.log(`🗑️ 已清理: ${o}`)}),window.indexedDB)try{["jianluochat-sync","jianluochat-crypto","matrix-js-sdk:crypto"].forEach(s=>{const d=window.indexedDB.deleteDatabase(s);d.onsuccess=()=>console.log(`🗑️ 已清理数据库: ${s}`),d.onerror=()=>console.log(`⚠️ 清理数据库失败: ${s}`)})}catch(o){console.warn("清理IndexedDB时出错:",o)}console.log("✅ 存储清理完成")}}}),Z={class:"matrix-test-page"},ee={class:"status-section"},oe={class:"status-indicator"},te={key:0,class:"status-loading"},se={key:1,class:"status-connected"},ne={key:2,class:"status-error"},le={key:3,class:"status-disconnected"},re={key:0,class:"error-message"},ae={class:"error-actions"},ce=["disabled"],ie={key:0,class:"rooms-section"},ue={class:"rooms-header"},de={key:0,class:"no-rooms"},ge={key:1,class:"rooms-list"},me=["onClick"],ve={class:"room-info"},ye={key:0,class:"room-topic"},he={class:"room-meta"},pe={class:"member-count"},_e={key:0,class:"unread-count"},fe={key:1,class:"last-message"},we={key:1,class:"current-room-section"},Ce={class:"message-input"},Ie=["disabled"],Se={class:"debug-section"},xe={class:"debug-info"},be=K({__name:"MatrixTest",setup(m){const v=X(),u=k(""),{isConnected:y,isInitializing:h,error:C,rooms:I,currentRoomId:w,currentRoom:M}=v,S=async()=>{console.log("🔄 重试连接..."),await v.retryInitialization()},D=()=>{confirm("⚠️ 这将清理所有Matrix相关数据并跳转到登录页面，确定继续吗？")&&(console.log("🧹 用户确认清理存储..."),v.clearAllStorage(),setTimeout(()=>{console.log("🔄 跳转到登录页面..."),window.location.href="/login"},1e3))},B=()=>{console.log("🔄 刷新房间列表..."),v.loadRooms()},A=p=>{console.log("📍 选择房间:",p),v.selectRoom(p)},T=async()=>{if(!(!u.value.trim()||!w.value))try{await v.sendMessage(w.value,u.value.trim()),u.value="",console.log("✅ 消息发送成功")}catch(p){console.error("❌ 发送消息失败:",p),alert("发送消息失败: "+p)}};return F(async()=>{console.log("🚀 Matrix测试页面加载"),localStorage.getItem("matrix-login-info")?(console.log("📋 发现登录信息，尝试自动连接..."),await S()):console.log("⚠️ 未找到登录信息，请先登录")}),(p,l)=>(c(),a("div",Z,[l[8]||(l[8]=t("div",{class:"header"},[t("h1",null,"🧪 Matrix客户端测试"),t("p",null,"基于Element Web最佳实践的简化实现")],-1)),t("div",ee,[t("div",{class:j(["status-card",{connected:r(y),error:!!r(C)}])},[l[1]||(l[1]=t("h3",null,"连接状态",-1)),t("div",oe,[r(h)?(c(),a("span",te,"🔄 初始化中...")):r(y)?(c(),a("span",se,"✅ 已连接")):r(C)?(c(),a("span",ne,"❌ 连接失败")):(c(),a("span",le,"⚪ 未连接"))]),r(C)?(c(),a("div",re,[t("p",null,g(r(C)),1),t("div",ae,[t("button",{onClick:S,disabled:r(h),class:"retry-btn"}," 🔄 重试连接 ",8,ce),t("button",{onClick:D,class:"clear-btn"}," 🧹 清理存储并重新登录 ")])])):b("",!0)],2)]),r(y)?(c(),a("div",ie,[t("div",ue,[t("h3",null,"房间列表 ("+g(r(I).length)+")",1),t("button",{onClick:B,class:"load-btn"},"🔄 刷新房间")]),r(I).length===0?(c(),a("div",de,l[2]||(l[2]=[t("p",null,"📭 暂无房间数据",-1),t("p",{class:"hint"},"可能需要等待同步完成，或者点击刷新按钮",-1)]))):(c(),a("div",ge,[(c(!0),a(H,null,W(r(I),i=>(c(),a("div",{key:i.roomId,class:j(["room-item",{active:i.roomId===r(w)}]),onClick:O=>A(i.roomId)},[t("div",ve,[t("h4",null,g(i.name),1),i.topic?(c(),a("p",ye,g(i.topic),1)):b("",!0),t("div",he,[t("span",pe,"👥 "+g(i.memberCount),1),i.unreadCount>0?(c(),a("span",_e," 🔔 "+g(i.unreadCount),1)):b("",!0)]),i.lastMessage?(c(),a("div",fe,[t("small",null,g(i.lastMessage.body),1)])):b("",!0)])],10,me))),128))]))])):b("",!0),r(M)?(c(),a("div",we,[t("h3",null,"当前房间: "+g(r(M).name),1),t("div",Ce,[q(t("input",{"onUpdate:modelValue":l[0]||(l[0]=i=>u.value=i),onKeyup:Y(T,["enter"]),placeholder:"输入消息...",class:"message-field"},null,544),[[G,u.value]]),t("button",{onClick:T,disabled:!u.value.trim(),class:"send-btn"}," 📤 发送 ",8,Ie)])])):b("",!0),t("div",Se,[l[7]||(l[7]=t("h3",null,"调试信息",-1)),t("div",xe,[t("p",null,[l[3]||(l[3]=t("strong",null,"客户端状态:",-1)),E(" "+g(r(y)?"已连接":"未连接"),1)]),t("p",null,[l[4]||(l[4]=t("strong",null,"房间数量:",-1)),E(" "+g(r(I).length),1)]),t("p",null,[l[5]||(l[5]=t("strong",null,"当前房间:",-1)),E(" "+g(r(w)||"无"),1)]),t("p",null,[l[6]||(l[6]=t("strong",null,"初始化中:",-1)),E(" "+g(r(h)?"是":"否"),1)])])])]))}}),Me=Q(be,[["__scopeId","data-v-4d106c27"]]);export{Me as default};
