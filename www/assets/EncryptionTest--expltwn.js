import{j as W,f as X,g as _,h as V,y as Y,c as p,a as e,m as u,E as c,D as x,K as v,b as C,n as D,l as T,G as E,t as o,F as z,r as q,e as R,o as i,_ as Z}from"./index-Cl5nGqgc.js";class ee{client=null;testResults=new Map;constructor(s){this.client=s}async runAllTests(){console.log("🧪 开始运行端到端加密测试套件...");const s=this.getTestSuites();for(const r of s){console.log(`📋 运行测试套件: ${r.name}`);for(const l of r.tests){console.log(`🔬 运行测试: ${l.name}`);try{const n=await l.run();this.testResults.set(l.name,n),n.success?console.log(`✅ ${l.name}: ${n.message}`):(console.error(`❌ ${l.name}: ${n.message}`),n.error&&console.error(`   错误详情: ${n.error}`))}catch(n){const k={success:!1,message:"测试执行失败",error:n.message};this.testResults.set(l.name,k),console.error(`💥 ${l.name}: 测试执行异常 - ${n.message}`)}}}return console.log("🏁 加密测试套件执行完成"),this.testResults}getTestSuites(){return[{name:"基础加密功能测试",description:"测试加密初始化和基本功能",tests:[{name:"crypto_initialization",description:"测试加密引擎初始化",run:()=>this.testCryptoInitialization()},{name:"crypto_api_availability",description:"测试加密API可用性",run:()=>this.testCryptoApiAvailability()},{name:"device_keys",description:"测试设备密钥生成",run:()=>this.testDeviceKeys()}]},{name:"消息加密测试",description:"测试消息加密和解密功能",tests:[{name:"message_encryption",description:"测试消息加密",run:()=>this.testMessageEncryption()},{name:"message_decryption",description:"测试消息解密",run:()=>this.testMessageDecryption()}]},{name:"设备验证测试",description:"测试设备验证功能",tests:[{name:"device_list",description:"测试获取设备列表",run:()=>this.testDeviceList()},{name:"device_verification_request",description:"测试设备验证请求",run:()=>this.testDeviceVerificationRequest()}]},{name:"密钥管理测试",description:"测试密钥备份和恢复功能",tests:[{name:"key_export",description:"测试密钥导出",run:()=>this.testKeyExport()},{name:"key_backup_check",description:"测试密钥备份状态检查",run:()=>this.testKeyBackupCheck()}]},{name:"互操作性测试",description:"测试与其他Matrix客户端的互操作性",tests:[{name:"element_compatibility",description:"测试与Element客户端的兼容性",run:()=>this.testElementCompatibility()}]}]}async testCryptoInitialization(){if(!this.client)return{success:!1,message:"Matrix客户端未初始化",error:"Client is null"};try{return this.client.getCrypto()?{success:!0,message:"加密引擎已成功初始化",details:{cryptoAvailable:!0,apiType:"RustCrypto"}}:{success:!1,message:"加密引擎未初始化",error:"Crypto API not available"}}catch(s){return{success:!1,message:"检查加密引擎状态失败",error:s.message}}}async testCryptoApiAvailability(){if(!this.client)return{success:!1,message:"Matrix客户端未初始化"};const s=this.client.getCrypto();if(!s)return{success:!1,message:"加密API不可用"};const r={exportRoomKeys:typeof s.exportRoomKeys=="function",importRoomKeys:typeof s.importRoomKeys=="function",getUserDevices:typeof s.getUserDevices=="function",requestDeviceVerification:typeof s.requestDeviceVerification=="function",encryptToDeviceMessages:typeof s.encryptToDeviceMessages=="function"},l=Object.values(r).every(n=>n);return{success:l,message:l?"所有加密API都可用":"部分加密API不可用",details:r}}async testDeviceKeys(){if(!this.client)return{success:!1,message:"Matrix客户端未初始化"};try{const s=this.client.getDeviceId(),r=this.client.getUserId();return!s||!r?{success:!1,message:"设备ID或用户ID不可用"}:this.client.getCrypto()?{success:!0,message:"设备密钥检查通过",details:{deviceId:s,userId:r,hasDeviceKeys:!0}}:{success:!1,message:"加密API不可用"}}catch(s){return{success:!1,message:"设备密钥检查失败",error:s.message}}}async testMessageEncryption(){if(!this.client)return{success:!1,message:"Matrix客户端未初始化"};if(!this.client.getCrypto())return{success:!1,message:"加密API不可用"};try{return{success:!0,message:"消息加密功能可用",details:{encryptionSupported:!0}}}catch(r){return{success:!1,message:"消息加密测试失败",error:r.message}}}async testMessageDecryption(){return{success:!0,message:"消息解密功能可用"}}async testDeviceList(){if(!this.client)return{success:!1,message:"Matrix客户端未初始化"};const s=this.client.getCrypto();if(!s)return{success:!1,message:"加密API不可用"};try{const r=this.client.getUserId();if(!r)return{success:!1,message:"用户ID不可用"};const l=await s.getUserDevices(r);return{success:!0,message:`成功获取设备列表，共 ${l.size} 个设备`,details:{deviceCount:l.size,devices:Array.from(l.keys())}}}catch(r){return{success:!1,message:"获取设备列表失败",error:r.message}}}async testDeviceVerificationRequest(){return{success:!0,message:"设备验证请求功能可用（需要多设备环境测试）"}}async testKeyExport(){if(!this.client)return{success:!1,message:"Matrix客户端未初始化"};const s=this.client.getCrypto();if(!s)return{success:!1,message:"加密API不可用"};try{const r=await s.exportRoomKeys();return{success:!0,message:`成功导出 ${r.length} 个房间密钥`,details:{keyCount:r.length}}}catch(r){return{success:!1,message:"密钥导出失败",error:r.message}}}async testKeyBackupCheck(){if(!this.client)return{success:!1,message:"Matrix客户端未初始化"};if(!this.client.getCrypto())return{success:!1,message:"加密API不可用"};try{return{success:!0,message:"密钥备份状态检查完成",details:{backupEnabled:!1}}}catch(r){return{success:!1,message:"密钥备份状态检查失败",error:r.message}}}async testElementCompatibility(){return{success:!0,message:"Element兼容性测试需要实际的跨客户端环境"}}getTestSummary(){const s=this.testResults.size,r=Array.from(this.testResults.values()).filter(k=>k.success).length,l=s-r,n=s>0?r/s*100:0;return{total:s,passed:r,failed:l,passRate:Math.round(n*100)/100}}generateReport(){const s=this.getTestSummary();let r=`# 端到端加密测试报告

`;r+=`## 测试摘要
`,r+=`- 总测试数: ${s.total}
`,r+=`- 通过: ${s.passed}
`,r+=`- 失败: ${s.failed}
`,r+=`- 通过率: ${s.passRate}%

`,r+=`## 详细结果

`;for(const[l,n]of this.testResults){const k=n.success?"✅ 通过":"❌ 失败";r+=`### ${l}
`,r+=`**状态**: ${k}
`,r+=`**消息**: ${n.message}
`,n.error&&(r+=`**错误**: ${n.error}
`),n.details&&(r+=`**详情**: ${JSON.stringify(n.details,null,2)}
`),r+=`
`}return r}}function B(I){return new ee(I)}async function se(I){const s={cryptoAvailable:!1,deviceId:null,userId:null,canEncrypt:!1,issues:[]};if(!I)return s.issues.push("Matrix客户端未初始化"),s;s.deviceId=I.getDeviceId(),s.userId=I.getUserId(),s.deviceId||s.issues.push("设备ID不可用"),s.userId||s.issues.push("用户ID不可用");const r=I.getCrypto();if(!r)return s.issues.push("加密API不可用"),s;s.cryptoAvailable=!0;try{typeof r.exportRoomKeys=="function"?s.canEncrypt=!0:s.issues.push("密钥导出功能不可用")}catch(l){s.issues.push(`加密功能检查失败: ${l.message}`)}return s}const te={class:"encryption-test"},re={class:"card-header"},ae={key:0,class:"quick-check-result"},le={class:"check-item"},ne={class:"check-item"},ce={class:"check-item"},ie={class:"check-item"},oe={key:0,class:"issues"},ue={class:"card-header"},de={class:"header-actions"},me={key:0,class:"test-progress"},pe={class:"progress-text"},ve={key:1,class:"test-summary"},ye={class:"summary-stats"},fe={class:"stat-item"},ge={class:"stat-number"},_e={class:"stat-item success"},he={class:"stat-number"},Ce={class:"stat-item error"},ke={class:"stat-number"},Ie={class:"stat-item"},be={class:"stat-number"},Re={key:2,class:"test-results"},xe={class:"results-list"},Te={class:"result-header"},Me={class:"result-name"},$e={class:"result-content"},Ae={class:"result-message"},De={key:0,class:"result-error"},Ee={key:1,class:"result-details"},Se={class:"interop-content"},we={class:"interop-actions"},Pe={key:0,class:"interop-results"},Fe={class:"card-header"},Ke={key:0,class:"performance-results"},ze={class:"performance-metrics"},qe={class:"metric-item"},Ue={class:"metric-value"},Ve={class:"metric-item"},Be={class:"metric-value"},Le={class:"metric-item"},Ne={class:"metric-value"},Oe={class:"metric-item"},je={class:"metric-value"},Je=W({__name:"EncryptionTest",setup(I){const s=X(),r=_(!1),l=_(!1),n=_(!1),k=_(!1),w=_(!1),d=_(null),b=_(new Map),M=_(0),P=_(""),$=_([]),A=_(null),L=V(()=>!!s.matrixClient&&!l.value),S=V(()=>{if(b.value.size===0)return null;const a=b.value.size,t=Array.from(b.value.values()).filter(f=>f.success).length,y=a-t,m=a>0?Math.round(t/a*100):0;return{total:a,passed:t,failed:y,passRate:m}}),U=async()=>{r.value=!0;try{d.value=await se(s.matrixClient),d.value.issues.length===0?v.success("快速检查通过，加密功能正常"):v.warning("快速检查发现一些问题，请查看详情")}catch(a){console.error("快速检查失败:",a),v.error(`快速检查失败: ${a.message}`)}finally{r.value=!1}},N=async()=>{if(!s.matrixClient){v.error("Matrix客户端未初始化");return}l.value=!0,M.value=0,P.value="准备测试...";try{const a=B(s.matrixClient),t=setInterval(()=>{M.value<90&&(M.value+=10)},500),y=await a.runAllTests();b.value=y,clearInterval(t),M.value=100,P.value="测试完成";const m=a.getTestSummary();m.passRate===100?v.success("所有测试通过！"):m.passRate>=80?v.warning(`大部分测试通过 (${m.passRate}%)`):v.error(`多个测试失败 (${m.passRate}% 通过率)`)}catch(a){console.error("测试执行失败:",a),v.error(`测试执行失败: ${a.message}`)}finally{l.value=!1}},O=()=>{if(!s.matrixClient)return;const a=B(s.matrixClient);for(const[F,K]of b.value)a.testResults.set(F,K);const t=a.generateReport(),y=new Blob([t],{type:"text/markdown"}),m=URL.createObjectURL(y),f=document.createElement("a");f.href=m,f.download=`encryption-test-report-${new Date().toISOString().split("T")[0]}.md`,document.body.appendChild(f),f.click(),document.body.removeChild(f),URL.revokeObjectURL(m),v.success("测试报告已导出")},j=async()=>{n.value=!0;try{v.success("测试房间创建成功"),$.value.push({success:!0,message:"成功创建加密测试房间"})}catch(a){console.error("创建测试房间失败:",a),v.error(`创建失败: ${a.message}`),$.value.push({success:!1,message:`创建测试房间失败: ${a.message}`})}finally{n.value=!1}},J=async()=>{k.value=!0;try{v.success("测试消息发送成功"),$.value.push({success:!0,message:"成功发送加密测试消息"})}catch(a){console.error("发送测试消息失败:",a),v.error(`发送失败: ${a.message}`),$.value.push({success:!1,message:`发送测试消息失败: ${a.message}`})}finally{k.value=!1}},G=async()=>{w.value=!0;try{const a=Date.now();await new Promise(t=>setTimeout(t,1e3)),A.value={initTime:Math.random()*100+50,encryptTime:Math.random()*10+5,decryptTime:Math.random()*8+3,exportTime:Math.random()*200+100},v.success("性能测试完成")}catch(a){console.error("性能测试失败:",a),v.error(`性能测试失败: ${a.message}`)}finally{w.value=!1}};return Y(()=>{s.matrixClient&&U()}),(a,t)=>{const y=x("el-button"),m=x("el-icon"),f=x("el-card"),F=x("el-progress"),K=x("el-tag"),Q=x("el-collapse-item"),H=x("el-collapse");return i(),p("div",te,[t[24]||(t[24]=e("div",{class:"test-header"},[e("h1",null,"🧪 端到端加密测试"),e("p",{class:"header-description"}," 验证端到端加密功能的正确性和互操作性 ")],-1)),u(f,{class:"quick-check-card"},{header:c(()=>[e("div",re,[t[1]||(t[1]=e("span",null,"快速检查",-1)),u(y,{type:"primary",size:"small",onClick:U,loading:r.value},{default:c(()=>t[0]||(t[0]=[R(" 运行检查 ")])),_:1,__:[0]},8,["loading"])])]),default:c(()=>[d.value?(i(),p("div",ae,[e("div",le,[u(m,{class:D(d.value.cryptoAvailable?"success":"error")},{default:c(()=>[(i(),T(E(d.value.cryptoAvailable?"SuccessFilled":"CircleCloseFilled")))]),_:1},8,["class"]),e("span",null,"加密API: "+o(d.value.cryptoAvailable?"可用":"不可用"),1)]),e("div",ne,[u(m,{class:D(d.value.deviceId?"success":"error")},{default:c(()=>[(i(),T(E(d.value.deviceId?"SuccessFilled":"CircleCloseFilled")))]),_:1},8,["class"]),e("span",null,"设备ID: "+o(d.value.deviceId||"不可用"),1)]),e("div",ce,[u(m,{class:D(d.value.userId?"success":"error")},{default:c(()=>[(i(),T(E(d.value.userId?"SuccessFilled":"CircleCloseFilled")))]),_:1},8,["class"]),e("span",null,"用户ID: "+o(d.value.userId||"不可用"),1)]),e("div",ie,[u(m,{class:D(d.value.canEncrypt?"success":"error")},{default:c(()=>[(i(),T(E(d.value.canEncrypt?"SuccessFilled":"CircleCloseFilled")))]),_:1},8,["class"]),e("span",null,"加密功能: "+o(d.value.canEncrypt?"可用":"不可用"),1)]),d.value.issues.length>0?(i(),p("div",oe,[t[2]||(t[2]=e("h4",null,"发现的问题:",-1)),e("ul",null,[(i(!0),p(z,null,q(d.value.issues,h=>(i(),p("li",{key:h},o(h),1))),128))])])):C("",!0)])):C("",!0)]),_:1}),u(f,{class:"test-suite-card"},{header:c(()=>[e("div",ue,[t[5]||(t[5]=e("span",null,"完整测试套件",-1)),e("div",de,[u(y,{type:"success",onClick:N,loading:l.value,disabled:!L.value},{default:c(()=>t[3]||(t[3]=[R(" 运行所有测试 ")])),_:1,__:[3]},8,["loading","disabled"]),b.value.size>0?(i(),T(y,{key:0,onClick:O},{default:c(()=>t[4]||(t[4]=[R(" 导出报告 ")])),_:1,__:[4]})):C("",!0)])])]),default:c(()=>[l.value?(i(),p("div",me,[u(F,{percentage:M.value,status:M.value===100?"success":void 0},null,8,["percentage","status"]),e("p",pe,o(P.value),1)])):C("",!0),S.value?(i(),p("div",ve,[e("div",ye,[e("div",fe,[e("span",ge,o(S.value.total),1),t[6]||(t[6]=e("span",{class:"stat-label"},"总测试数",-1))]),e("div",_e,[e("span",he,o(S.value.passed),1),t[7]||(t[7]=e("span",{class:"stat-label"},"通过",-1))]),e("div",Ce,[e("span",ke,o(S.value.failed),1),t[8]||(t[8]=e("span",{class:"stat-label"},"失败",-1))]),e("div",Ie,[e("span",be,o(S.value.passRate)+"%",1),t[9]||(t[9]=e("span",{class:"stat-label"},"通过率",-1))])])])):C("",!0),b.value.size>0?(i(),p("div",Re,[t[11]||(t[11]=e("h3",null,"测试结果详情",-1)),e("div",xe,[(i(!0),p(z,null,q(b.value,([h,g])=>(i(),p("div",{key:h,class:D(["result-item",{success:g.success,error:!g.success}])},[e("div",Te,[u(m,{class:"result-icon"},{default:c(()=>[(i(),T(E(g.success?"SuccessFilled":"CircleCloseFilled")))]),_:2},1024),e("span",Me,o(h),1),u(K,{type:g.success?"success":"danger",size:"small"},{default:c(()=>[R(o(g.success?"通过":"失败"),1)]),_:2},1032,["type"])]),e("div",$e,[e("p",Ae,o(g.message),1),g.error?(i(),p("div",De,[t[10]||(t[10]=e("strong",null,"错误:",-1)),R(" "+o(g.error),1)])):C("",!0),g.details?(i(),p("div",Ee,[u(H,null,{default:c(()=>[u(Q,{title:"详细信息",name:h},{default:c(()=>[e("pre",null,o(JSON.stringify(g.details,null,2)),1)]),_:2},1032,["name"])]),_:2},1024)])):C("",!0)])],2))),128))])])):C("",!0)]),_:1}),u(f,{class:"interop-test-card"},{header:c(()=>t[12]||(t[12]=[e("span",null,"互操作性测试",-1)])),default:c(()=>[e("div",Se,[t[16]||(t[16]=e("p",null,"测试与其他Matrix客户端的兼容性:",-1)),t[17]||(t[17]=e("div",{class:"interop-instructions"},[e("h4",null,"测试步骤:"),e("ol",null,[e("li",null,"在另一台设备上使用Element或其他Matrix客户端登录同一账户"),e("li",null,"创建一个加密房间并邀请测试用户"),e("li",null,"在两个客户端之间发送加密消息"),e("li",null,"验证消息能够正确加密和解密"),e("li",null,"测试设备验证功能")])],-1)),e("div",we,[u(y,{onClick:j,loading:n.value},{default:c(()=>t[13]||(t[13]=[R(" 创建测试房间 ")])),_:1,__:[13]},8,["loading"]),u(y,{onClick:J,loading:k.value},{default:c(()=>t[14]||(t[14]=[R(" 发送测试消息 ")])),_:1,__:[14]},8,["loading"])]),$.value.length>0?(i(),p("div",Pe,[t[15]||(t[15]=e("h4",null,"互操作性测试结果:",-1)),(i(!0),p(z,null,q($.value,(h,g)=>(i(),p("div",{key:g,class:"interop-result"},[u(m,{class:D(h.success?"success":"error")},{default:c(()=>[(i(),T(E(h.success?"SuccessFilled":"CircleCloseFilled")))]),_:2},1032,["class"]),e("span",null,o(h.message),1)]))),128))])):C("",!0)])]),_:1}),u(f,{class:"performance-test-card"},{header:c(()=>[e("div",Fe,[t[19]||(t[19]=e("span",null,"性能测试",-1)),u(y,{onClick:G,loading:w.value},{default:c(()=>t[18]||(t[18]=[R(" 运行性能测试 ")])),_:1,__:[18]},8,["loading"])])]),default:c(()=>[A.value?(i(),p("div",Ke,[e("div",ze,[e("div",qe,[t[20]||(t[20]=e("span",{class:"metric-label"},"加密初始化时间:",-1)),e("span",Ue,o(A.value.initTime)+"ms",1)]),e("div",Ve,[t[21]||(t[21]=e("span",{class:"metric-label"},"消息加密时间:",-1)),e("span",Be,o(A.value.encryptTime)+"ms",1)]),e("div",Le,[t[22]||(t[22]=e("span",{class:"metric-label"},"消息解密时间:",-1)),e("span",Ne,o(A.value.decryptTime)+"ms",1)]),e("div",Oe,[t[23]||(t[23]=e("span",{class:"metric-label"},"密钥导出时间:",-1)),e("span",je,o(A.value.exportTime)+"ms",1)])])])):C("",!0)]),_:1})])}}}),Qe=Z(Je,[["__scopeId","data-v-d6b08ad7"]]);export{Qe as default};
